[{"/Users/usuario/ReactCURSO/crud-firestore/src/App.jsx":"1","/Users/usuario/ReactCURSO/crud-firestore/src/firebase.js":"2"},{"size":4561,"mtime":1612039419037,"results":"3","hashOfConfig":"4"},{"size":526,"mtime":1611985251871,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"br33fs",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/usuario/ReactCURSO/crud-firestore/src/App.jsx",["11"],"import React, { useEffect, useState } from 'react';\nimport {firebase} from './firebase';\n\n\nfunction App() {\n\n  const [tareas, setTareas] =  useState([]);\n  //para el formulario\n  const [tarea, setTarea] = useState('');\n  //modo edicion una variable o state\n  const [modoEdicion, setModoEdicion] = useState(false)\n  // state para el id\n  const [id, setId] = useState('')\n\n  useEffect(() =>  {\n        const obtenerDatos = async () => {\n            try{\n\n                const db = firebase.firestore();\n\n                const data = await db.collection('tareas').get();\n                \n                const arrayData = data.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n\n                setTareas(arrayData);\n\n            }\n            catch(error){\n              console.log(error);\n            }\n        }\n\n        obtenerDatos();\n  },[]);\n\n  const agregar = async (e) => {\n    e.preventDefault();\n    \n    if(!tarea.trim()){\n       console.log(\"esta vacio\");\n       return;\n    }\n\n    console.log(tarea);\n\n    try{\n\n        const db = firebase.firestore();\n        const nuevaTarea = {\n              nombre: tarea,\n              fecha: Date.now()\n        }\n\n        const data = await db.collection('tareas').add(nuevaTarea);\n\n        setTareas([\n              ...tareas,\n              {...nuevaTarea, id: data.id}\n        ])\n\n        setTarea('')\n\n\n    }catch(error)\n    {\n      console.log(error);\n    }\n    \n  }\n\n  const eliminar = async(id) => {\n\n      try{\n        \n        const db = firebase.firestore();\n        await db.collection('tareas').doc(id).delete();\n\n        //aray filtrado sacando el id que sea igual al enviado\n        const arrayFiltrado = tareas.filter( item => item.id != id);\n        setTareas(arrayFiltrado);\n\n      }catch(error){\n        console.log(error);\n      }\n\n  }\n\n  const activarModoEdicion = (item) => {\n\n    setModoEdicion(true);\n    setTarea(item.nombre);\n    setId(item.id);\n    \n  }\n  \n  const editar = async (e) => {\n    e.preventDefault();\n\n    if(!tarea.trim()){\n      console.log(\"esta vacio\");\n      return;\n    }\n\n    try\n    {\n       const db = firebase.firestore();\n        await db.collection('tareas').doc(id).update({\n          nombre: tarea\n        });\n        \n        const arrayEditado = tareas.map(item => (\n            item.id === id ? { id: item.id, fecha: item.fecha, nombre: tarea } : item\n        ));\n\n        setTareas(arrayEditado);\n        setModoEdicion(false);\n        setId('');\n        setTarea('')\n\n    } \n    catch(error){\n       console.log(error);\n    }\n\n  }\n\n\n  return (\n    <div className=\"container mt-3\">\n     \n      <div className=\"row\">\n          <div className=\"col-md-6\">\n\n            <ul className=\"list-group\">\n               {\n                  tareas.map( item => (\n                      <li className=\"list-group-item\" key={item.id}> \n                            {item.nombre}                     \n                            <button \n                               className=\"btn btn-warning btn-sm float-end mx-2\"\n                               onClick={ () => activarModoEdicion(item)}\n                               >\n                              Editar\n                            </button>\n                            <button \n                               className=\"btn btn-danger btn-sm float-end\"\n                               onClick={ () => eliminar(item.id)}\n                               >\n                              Eliminar\n                            </button>\n                      </li>\n                  ))\n               }\n            </ul>\n          </div>\n          <div className=\"col-md-6\">\n              <h3> \n                {\n                    modoEdicion ? 'Editar Tarea ' : 'Agregar Tarea'\n                }\n              </h3>\n              <form onSubmit={ modoEdicion ? editar : agregar }>\n                  <input type=\"text\"\n                         placeholder=\"Ingrese Tarea\"\n                         className=\"form-control mb-2\"\n                         value = {tarea}\n                         onChange={ e => setTarea(e.target.value) }/>\n\n                        <div className=\"d-grid gap-2\">\n                          <button className={ modoEdicion ? 'btn btn-warning' : 'btn btn-dark'} type=\"submit\">\n                              {\n                                modoEdicion ? 'Editar' : 'Agregar'\n                              }\n                          </button>  \n                        </div>\n                    \n              </form>\n          </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/usuario/ReactCURSO/crud-firestore/src/firebase.js",[],{"ruleId":"12","severity":1,"message":"13","line":79,"column":62,"nodeType":"14","messageId":"15","endLine":79,"endColumn":64},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]